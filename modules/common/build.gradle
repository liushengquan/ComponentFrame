apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion build_versions.target_sdk
    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode project.VersionCode as int
        versionName project.VersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ AROUTER_MODULE_NAME : project.getName() ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Support libraries
    api deps.support.app_compat_v7
    api deps.support.v4
    api deps.support.design
    api deps.support.cardview
    api deps.support.recyclerview
    api deps.constraint_layout

    //test
    api deps.test.java
    api deps.test.android_runner
    api deps.test.android_espresso

    // other
    api deps.kotlin.stdlib
    api deps.event_bus
    api deps.gson
    api deps.glide

    //router
    api deps.arouter_api

    //annotationProcessor
    annotationProcessor deps.glide_annotation_processer
    annotationProcessor deps.arouter_compiler
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                //这里指定需要统一的依赖版本,这里统一为28.0.0
                details.useVersion '27.0.0'
            }
        }
    }
}
